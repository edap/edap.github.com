#version 150

uniform float time;
uniform vec2 mouse;
uniform vec2 resolution;
uniform vec3 spectrum;
uniform sampler2D texture0;
uniform sampler2D texture1;
uniform sampler2D texture2;
uniform sampler2D texture3;
uniform sampler2D prevFrame;

#define PI 3.14159265359

in VertexData
{
    vec4 v_position;
    vec3 v_normal;
    vec2 v_texcoord;
} inData;

out vec4 fragColor;

float plot(vec2 st, float pct){
   return smoothstep( pct-0.02, pct, st.y) -
          smoothstep( pct, pct+0.02, st.y);
}

void main(void){
    // this demo is for the function mix
    // we will create a pct value from initial uv.x
    // as a vector instead as a float
    vec3 colorA = vec3(0.149,0.141,0.912);
    vec3 colorB = vec3(1.000,0.833,0.224);
    //vec2 uv = -1. + 2. * inData.v_texcoord;
    vec2 uv = inData.v_texcoord;


    vec3 color = vec3(0.0);
    // We map x (0.0 - 1.0) to the hue (0.0 - 1.0) // And the y (0.0 - 1.0) to the brightness
    color = hsb2rgb(vec3(uv.x,1.0,uv.y));
    fragColor = vec4(color,1.0);
}
