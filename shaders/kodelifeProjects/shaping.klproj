#version 150

uniform float time;
uniform vec2 mouse;
uniform vec2 resolution;
uniform vec3 spectrum;
uniform sampler2D texture0;
uniform sampler2D texture1;
uniform sampler2D texture2;
uniform sampler2D texture3;
uniform sampler2D prevFrame;

#define PI 3.14159265359

in VertexData
{
    vec4 v_position;
    vec3 v_normal;
    vec2 v_texcoord;
} inData;

out vec4 fragColor;

float plot(vec2 st, float pct){
   return smoothstep( pct-0.02, pct, st.y) -
          smoothstep( pct, pct+0.02, st.y);
}

void main(void)
{
    //vec2 uv = -1. + 2. * inData.v_texcoord;
    vec2 uv = inData.v_texcoord;
    float r = abs(sin(cos(time+2.*uv.y)*2.*uv.x+time));
    float g = abs(cos(sin(time+2.*uv.x)*3.*uv.y+time));
    float b = spectrum.x * 100. ;

    
    //float y = step(0.5, uv.x);
    //float y = smoothstep(cos(time), 0.5, uv.y);
    float y = abs(sin(uv.x+time)*1);
    vec3 color = vec3(y);
    float pct = plot(uv,y);
    color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0);
    fragColor = vec4(color, 1.0);
//fragColor = vec4(r,g,b, 1.0);
//fragColor = vec4(r,g,b, 1.0);
//fragColor = vec4(r,g,b, 1.0);
}
